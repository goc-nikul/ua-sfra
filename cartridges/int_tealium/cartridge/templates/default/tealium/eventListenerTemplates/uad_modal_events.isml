<script>
  window.UADatalayer.prototype.onDependenciesReady(function bindModalEvents() {
    function actionModal(name) {
      var pdpSellingModals = ['product: size chart', 'product: showMoreFired', 'product: gallery zoom', 'pdp: qualtrics'];
      if (pdpSellingModals.indexOf(name) > -1) {
        var pageProduct = uaDatalayer.getPageData().products[0].product_style;
        uaDatalayer.action('modalOpened', {
          site_modal: name,
          products: [{
            product_style: pageProduct
          }]
        });
      } else if (name === 'trustarc') {
          var pageName = uaDatalayer.getPageData().page_name;
          uaDatalayer.action('modalOpened', {
            site_modal: name,
            internal_campaign_module : 'banner',
            prev_page_name : pageName,
            internal_campaign_asset_name : 'privacy info banner',
            internal_campaign_link : 'trustarc Modal'
          });
      } else if (name === 'login' || name === 'register') {
          const sessionId = uaDatalayer.getPageData().dwsid;
          uaDatalayer.action('modalOpened', {
            site_modal: name,
            dwsid: sessionId
          });
      } else {
          uaDatalayer.action('modalOpened', {
            site_modal: name
          });
        }
    }
    // Site Modals
    var $body = $('body');
    var newVisitorModalFired = false;
    var newVistorModalName = 'new-visitor-modal';
    $body.on('modalShown', function (jqEv, data) {
      var name = data && data.name;
      var errorName = data && data.errorName;
      var errorMessage = data && data.errorMessage;
      if (name && errorName && errorMessage) {
          uaDatalayer.action('modalOpened', {
              site_modal: name,
              error_name: errorName,
              error_message: errorMessage
          });
      } else if (name) {
        actionModal(name);
        if (name === newVistorModalName) {
          newVisitorModalFired = true;
        }
      }
    });
    // new-visitor modal fires before load sometimes
    if (!newVisitorModalFired) {
      var newVistorModalVisible = $('[data-analytics-location="' + newVistorModalName + '"]').is(':visible');
      if (newVistorModalVisible) {
        actionModal(newVistorModalName);
      }
    }
    // Trustarc Implied Consent Banner Tracking
    if ($('.l-consent_banner').is(':visible')) {
        actionModal('privacy info banner');
      }
    $body.on('click', '[data-analytics-track="data-qualtrics"]', function () {
        actionModal('pdp: qualtrics');
      });
    $body.on('click', '[data-analytics-track="data-privacy"]', function () {
        var pageName = uaDatalayer.getPageData().page_name;
        uaDatalayer.action('genericLink', {
          internal_campaign_module : 'banner',
          prev_page_name : 'home',
          internal_campaign_asset_name : 'privacy info banner',
          internal_campaign_link : $(this).attr('href')
        });
      });
     // Trustarc Expressed Consent Modal Tracking
    if (window.truste && window.truste.eu && window.truste.eu.addEventListener) {
      if ($(window.truste.eu.iframe).is(':visible')) {
        actionModal('trustarc');
      }
      window.truste.eu.addEventListener(function (eventName) {
        if (eventName === 'open') {
          actionModal('trustarc');
        }
      });
    }
    var pageData = uaDatalayer.getPageData() || {};
    if (pageData.page_type === 'product-detail') {
      $body.on('product:showMoreFired', function (jqEv, data) {
        var name = data && data.name;
        actionModal(name);
        var type = data && data.type || 'unknown';
        uaDatalayer.action('modalOpened', {
          pdp_selling_tool: 'Detail: show more ' + type
        });
      });
    }
    $body.on('bopis:storepicker', function (jqEv,data) {
      safetyFirst(function storeSearch() {
        var stores = data.storeObj.stores;
        var dist = data.storeObj.radius && (data.storeObj.radius).toString();
        if (stores.length) {
          var minDist = Math.min.apply(null, stores.map(function (store) {
            return store.distance && (store.distance).split(' ')[0];
          }));

          var nearestStoreID = stores.filter(store => {
            return store.distance && (store.distance).split(' ')[0] == minDist
          })[0].ID;
          var storesID = '';
          stores.forEach(function (store) {
            storesID = storesID + ':' + store.ID;
          });

          storesID = storesID.substring(1);

          var results = dist + 'mi>' + storesID;
        }
        if (!data.storeObj.searchKey.postalCode) {
            uaDatalayer.action('modalOpened', {
                site_modal: 'bopis:select a store'
              });
        } else if (data.storeObj.searchKey.postalCode && stores.length === 0) {
            uaDatalayer.action('modalOpened', {
                site_modal: 'bopis:select a store',
                bopis: {
                    'search': {
                      number_of_results: '0',
                      zip_code: data.storeObj.searchKey.postalCode,
                      distance: dist,
                      bopis_message: 'There are no stores with store pick up within ' + dist + ' miles of ' + data.storeObj.searchKey.postalCode + ', try expanding the distance.'
                    }
                  }
              })
        } else {
        uaDatalayer.action('modalOpened', {
          site_modal: 'bopis:select a store',
          bopis: {
            'search': {
              number_of_results: stores.length ? (stores.length).toString() : '0',
              zip_code: stores.length ? data.storeObj.searchKey.postalCode : undefined,
              store_id: stores.length ? nearestStoreID : undefined,
              distance: dist,
              results: stores.length ? results : undefined
            }
          }
        });
      }
      });
    });
    $body.on('bopis:storepicker:continue', function (jqEv,data) {
        uaDatalayer.action('modalOpened', {
            site_modal: 'bopis:select a store',
            store_id: data.storeId
        });
    });
    $body.on('loyalty:pilot:zipcode', function (jqEv,data) {
        uaDatalayer.action('genericLink', {
            loyalty : {
              loyalty : true,
              action : 'zip_code',
              zip : data.zipCode
          }
        });
    });
    $body.on('click', '[data-analytics-track="loyalty-waitlist"]', function () {
      uaDatalayer.action('genericLink', {
        loyalty : {
          loyalty : true,
          action : 'waitlist'
        }
      });
    });
    $body.on('loyalty:enroll', function (jqEv,data) {
        uaDatalayer.action(data.type, {
            loyalty : {
              loyalty : data.loyalty,
              action : data.action,
              member : data.member,
              points_earned: data.points_earned
          }
        });
    });
    $body.on('click', '[data-analytics-track="loyalty-learn-more"]', function () {
      uaDatalayer.action('genericLink', {
        loyalty : {
          loyalty : true,
          action : 'learn_more'
        }
      });
    });
    $body.on('product:afterAttributeSelect', function (e, response) {
      var page = response.container.data('cmp');
      var option = response.data.option;
      var DLproduct = uaDatalayer.getPageData().products[0];
      if (DLproduct && (option == 'color'|| option == 'size') && (page === "productDetail" || page ===  "productQuickView")) {
        var product = response.data.product;
        var inventoryRecord = response.data.inventoryATSValue;
        var variantColor = product.custom.color;
        var variantSize = product.custom.size;
        DLproduct.product_sku = DLproduct.product_style + '-' + variantColor + '-' + variantSize;
        DLproduct.product_color = DLproduct.product_style + '-' + variantColor;
        var isNotifyMeEnabled = response.data.isNotifyMeEnabled != null && response.data.isNotifyMeEnabled && !product.available;
        var uaDLobj = {
          products: [DLproduct]
        }
        if (isNotifyMeEnabled &&  page !==  "productQuickView") {
          uaDLobj.notify_me = {
            event: null,
            button_state: 'enabled',
            data: null
          };
        }
        if (inventoryRecord) {
          uaDLobj.products[0].product_inventory_stock_level = inventoryRecord;
        } else {
            uaDLobj.products[0].product_inventory_stock_level = 0;
        }
        uaDatalayer.action('genericLink', uaDLobj);
      }
    });
   
    // Quick view modal is clicked for a product on PLP
    $body.on('quickview:show', function (e) { 
      var $tile = $(e.target).closest('.js-cmp-productTile');
      uaDatalayer.action('genericLink', {
        products: [{
          product_name: $tile.find('.b-tile-name').text(),
          product_style: $tile.find('.b-tile-variations_container').data('product').toString(),
        }],
        quick_atb: {
          state: 'clicked'
        }
      });
    });

    // Quick view modal is visible
    $body.on('quickview:ready', function (e, data) { 
      if (data.isQuickAdd) {
        var actualListPrice = data.product.price.actualListPrice != undefined  ? data.product.price.actualListPrice.decimalPrice : '';
        if ((actualListPrice == undefined) && (data.product.price.min != undefined)) {
          if ((data.product.price.min.actualListPrice != undefined)) {
            actualListPrice = data.product.price.min.actualListPrice.decimalPrice;
           } else {
            actualListPrice = data.product.price.min.sales.decimalPrice;
           }
        }
        var salesPrice = data.product.price.sales != undefined ? data.product.price.sales.decimalPrice : '';
        if ((salesPrice == undefined) && (data.product.price.min != undefined)) {
          if ((data.product.price.min.sales != undefined)) {
            salesPrice = data.product.price.min.sales.decimalPrice;
           }
        }
        uaDatalayer.action('genericLink', {
          products: [{
            product_color: data.product.custom.color,
            product_gender: data.product.custom.gender,
            product_id: data.product.id,
            product_msrp: actualListPrice,
            product_name: data.product.productName,
            product_price: salesPrice,
            product_sku: data.product.custom.sku,
            product_style: data.product.custom.style
          }],
          quick_atb: {
            state: 'viewed'
          }
        });
      }
    });

    // Quick view modal is closed
    $body.on('hide.bs.modal', '#quickViewModal', function (e) {
      var $productQuickView = $(this).find('.product-quickview');
      uaDatalayer.action('genericLink', {
        products: [{
          product_name: $productQuickView.find('.product-name').text(),
          product_id: $productQuickView.data('pid').toString(),
          product_style: $productQuickView.data('mpid').toString()
        }],
        quick_atb: {
          state: 'closed'
        }
      });
    });

    // Quick view Redirects to the pdp
    $body.on('click touchstart', '.b-product-quickview-link', function (e) { 
      var $productQuickView = $(this).closest('.product-quickview');
      uaDatalayer.action('genericLink', {
        products: [{
          product_name: $productQuickView.find('.product-name').text(),
          product_id: $productQuickView.data('pid'),
          product_style: $productQuickView.data('mpid')
        }],
        quick_atb: {
          state: 'pdpRedirect',
        }
      });
    })

    // NotifyMe view modal is opened
    $body.on('click', '.b-notify-cta', function (e) {
      var product = uaDatalayer.getPageData().products[0];
      if(product) {
        uaDatalayer.action('genericLink', {
          products: [product],
          notify_me: {
            event: 'clicked',
            button_state: 'enabled',
            data: null
          }
        });
      } 
    });

    // NotifyMe view modal data submitted
    $body.on('after.NotifyMe.FormSubmit', function (e, form) {
    if (!$(this).find('input.is-invalid').length) {
      var product = uaDatalayer.getPageData().products[0];
      if(product) {
        var data = form.data.split("&");
        var dataObj={};
        for(var key in data)
        {
          dataObj[data[key].split("=")[0]] = data[key].split("=")[1];
        }
        var notifyName = decodeURIComponent(dataObj.productNotifyMeFirstName);
        var notifyEmail = decodeURIComponent(dataObj.productNotifyMeEmail);
        uaDatalayer.action('genericLink', {
          products: [product],
              notify_me: {
                event: 'submitted',
                button_state: 'enabled',
                data: {
                first_name : notifyName,
                email : notifyEmail
              }
            }
          });
        }
      }
    });

    // NotifyMe view modal is closed
    $body.on('hide.bs.modal', '.b-product-notify-me-modal:not(.complete)', function (e) {
      var product = uaDatalayer.getPageData().products[0];
      if(product) {
        uaDatalayer.action('genericLink', {
          products: [product],
          notify_me: {
            event: 'closed',
            button_state: 'enabled',
            data: null
          }
        });
      }
    });
  });
</script>
