/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
* This script will get a count of each item from the previous day and send
* the number of orders and the total of all orders to Shoprunner.
* It needs:
*	Date
*	Partner code
*	Total # of orders
*	Total $ of orders
*
*/
importPackage( dw.system );
importPackage( dw.io );
importPackage( dw.order );
importPackage( dw.util );
importPackage( dw.value );


function execute( args : PipelineDictionary ) : Number
{
	var workingPath : String = dw.io.File.IMPEX + "/src/sr/sr_" + dw.system.Site.current.ID + "/";
	var partnerCode : String = Site.getCurrent().getCustomPreferenceValue('sr_retailerID');

	if( !empty( partnerCode ) ) {
		var calendar : Calendar = dw.system.Site.calendar;
		(new dw.io.File(workingPath)).mkdirs();
		var fileName : String = partnerCode + "_" +
			StringUtils.formatCalendar(calendar,"yyyyMMddHHmm")+ "_daily-order-count-feed.txt";
		var file : File = new dw.io.File(workingPath + fileName);
		var prodFW = new FileWriter(file);
		
		var today = new Date();
		let sDate = new Date(today.getTime() - ((1 *24) * 60 * 60 * 1000));
        sDate = new Date(sDate.getFullYear(), sDate.getMonth(), sDate.getDate());		
		var eDate = new Date(sDate.getFullYear(), sDate.getMonth(), sDate.getDate());
		eDate.setHours(23,59,59,999);

        var previousDay : Calendar = new Calendar();
        previousDay.add(dw.util.Calendar.DAY_OF_YEAR, -1);
        var seekOrder : string = StringUtils.formatCalendar(previousDay,"yyyy-MM-dd");
        		
		var orders : SeekableIterator = dw.order.OrderMgr.queryOrders("creationDate > {0} AND creationDate < {1} AND custom.sr_token != {2}","creationDate asc", sDate, eDate, null);
		
		var numOrders : Number = orders.getCount();
		var ordersTotal : Money = null;
		for each(var dayOrder : Order in orders){
			ordersTotal += dayOrder.getTotalGrossPrice();
		}
		
		prodFW.writeLine(seekOrder+"\t"+partnerCode+"\t"+numOrders.toFixed()+"\t"+ordersTotal);
		orders.close();
		prodFW.flush();
		prodFW.close();
		
		var sendStatus : Boolean = require('~/cartridge/scripts/feeds/srFTP').ftpToSR(file, Site.getCurrent());
		if(sendStatus){
			return PIPELET_NEXT;
		}else{
			return PIPELET_ERROR;
		}
	} else {
		return PIPELET_ERROR;
	}
}

module.exports = {
	execute: execute
};