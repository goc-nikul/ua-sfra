name: Deploy to Instance
on:
  workflow_dispatch:
    inputs:
      instance:
        description: Instance URL or name from config.yaml
        required: true
      region:
        description: Region metadata expected (na, emea, apac)
        required: true
        default: na
      instanceType:
        description: Instance type (stg, dev)
        required: true
        default: dev
      certUrl:
        description: Cert URL (for stg environments)
        required: false
jobs:
  build-and-deploy:
    name: Build and Deploy to Target
    runs-on: ubuntu-latest
    environment: development
    timeout-minutes: 30
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.GH_SSH_KEY }}
          persist-credentials: true
          submodules: recursive
      - uses: ./.github/actions/lint-and-test
      - uses: ./.github/actions/build-packages
      - name: Deploy
        run: .build/deploy-instance.sh "${{ github.event.inputs.instance }}" "${{ github.event.inputs.region }}" "${{ github.event.inputs.instanceType }}" "${{ github.event.inputs.certUrl }}"
        env:
            SFCC_OAUTH_CLIENT_ID: ${{ secrets.SFCC_OAUTH_CLIENT_ID }}
            SFCC_OAUTH_CLIENT_SECRET: ${{ secrets.SFCC_OAUTH_CLIENT_SECRET }}
            SFCC_CERT_UA03_P12: ${{ secrets.SFCC_CERT_UA03_P12 }}
            SFCC_CERT_UA03_SECRET: ${{ secrets.SFCC_CERT_UA03_SECRET }}
            DRY_RUN: ${{ secrets.DRY_RUN }}
      - name: Run Tests
        run: .build/run_tests-instance.sh "${{ github.event.inputs.instance }}"
        env:
            TEST_QUEUE_USER: ${{ secrets.TEST_QUEUE_USER }}
            TEST_QUEUE_PASSWORD: ${{ secrets.TEST_QUEUE_PASSWORD }}
            DRY_RUN: ${{ secrets.DRY_RUN }}
      - name: Slack Notification
        if: ${{ always() }}
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_USERNAME: ua-sfra-build
            SLACK_COLOR: ${{ job.status }}
            SLACK_MESSAGE: '${{ job.status }}'
