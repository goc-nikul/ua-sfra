<?xml version="1.0" encoding="UTF-8"?>
<services xmlns="http://www.demandware.com/xml/impex/services/2014-09-26">

    <service-credential service-credential-id="sitemaps_SFTP_credentials">
        <url>104.154.192.88:22</url>
        <user-id>seo_analytics</user-id>
        <password encrypted="true" encryption-type="common.export">iaEBbqY+SODn/RwK3r08/nRFUoRKcRmR6Z8e7VFQ2wKEQNVSQOs/Sqorzmi0CvEB</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="UACAPI.http.loyalty.credentials">
        <url>https://api-integration.ecm-external.us.ua.dev/graphql</url>
        <user-id/>
        <password encrypted="true" encryption-type="common.export">X4eKTJkNuJ4wqBCQWPcQxiWNbqlsAgMrKaGN4UmhVyo=</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="marketingcloud.loyalty">
        <url>https://mcdh79rxm36750hgr4mw7g0f9br0.rest.marketingcloudapis.com/interaction/v1/events</url>
        <user-id/>
        <password/>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="marketingcloud.loyalty.auth">
        <url>https://mcdh79rxm36750hgr4mw7g0f9br0.auth.marketingcloudapis.com/v2/token</url>
        <user-id>dk979zteoznohujm9rk21iv3</user-id>
        <password encrypted="true" encryption-type="common.export">078howjJTSmNkMI/p3zdlGBWYDab2WaLo0iM+GOBwEeJjQufluGNnJak4RxZ33RYmPF/CXBRU+M54j+CjrFYLA==</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="AurusPaySandboxSessionTokken">
        <url>https://uatds42.auruspay.com/aurus-adsdk-web-service/auruspay/adsdk/sessiontoken</url>
        <user-id/>
        <password encrypted="true" encryption-type="common.export">YETsGA1aQJTVHiUASAtYHng3ZtLIbRG5vCXZ8qnp35Q=</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="AuruspaySandboxAuth">
        <url>https://uatds42.auruspay.com/aurus-adsdk-web-service/auruspay/adsdk/authtransaction</url>
        <user-id/>
        <password encrypted="true" encryption-type="common.export">wFsbuOV4xeHnRTqiK2U/jjNVbRBE2i094LmhVo6qduE=</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="AuruspaySandboxBillerToken">
        <url>https://uatds42.auruspay.com/aurus-adsdk-web-service/auruspay/adsdk/billertoken</url>
        <user-id/>
        <password encrypted="true" encryption-type="common.export">nQgulEcanZpz8QiXinyMmMRwCaXaBJ1krlgYLrDwWrc=</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="AuruspaySandboxSession">
        <url>https://uatds42.auruspay.com/aurus-adsdk-web-service/auruspay/adsdk/sessionId</url>
        <user-id/>
        <password encrypted="true" encryption-type="common.export">WDyxO60gUh91wbR6K6mK01gcX/LHSIF1zrz+OUIk2Fk=</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="int_legendsoft.credentials">
        <url>https://test.legendsoft.com/underarmor</url>
        <user-id>maostage@manh.com</user-id>
        <password encrypted="true" encryption-type="common.export">hKk0+jX9WM1lkOoWeG6ZXIl1QtEPGzFwE0JVWvaCZK++YfG7CTSz5AZ48kWuADyL</password>
    </service-credential>

    <service-credential service-credential-id="idm.http.credentials">
        <url>https://integ-identity.api.ua.com</url>
        <user-id/>
        <password/>
    </service-credential>

    <service-credential service-credential-id="AWS-Stg_NA">
        <url>sftp-staging.ua.com</url>
        <user-id>na04-ecomm-staging</user-id>
        <password/>
    </service-credential>

    <service-credential service-credential-id="Adobeassetapi.http.outfit">
        <url>https://nonprod-api-gw.underarmour.com/gi/qa/dam-prc/v2/content/dam/product</url>
        <user-id/>
        <password/>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

     <service-credential service-credential-id="int_perimeterx.https.client.uri">
        <url>https://client.perimeterx.net</url>
        <user-id/>
        <password/>
    </service-credential>

    <service-credential service-credential-id="brandify.store">
        <url>https://api.brandify.com/rest</url>
        <user-id/>
        <password></password>
    </service-credential>

    <service-credential service-credential-id="int_perimeterx.https.captchaScript.uri">
        <url>https://captcha.px-cdn.net</url>
        <user-id/>
        <password/>
    </service-credential>
    <service-credential service-credential-id="int_fedex.soap.shipment.label">
        <url>https://wsbeta.fedex.com:443/web-services</url>
        <user-id/>
    </service-credential>
    <service-credential service-credential-id="int_canadapost.http.shipment.cred">
        <url/>
        <user-id>58370529177d92a1</user-id>
		<password>c0d5c3d81b6d5397671eca</password>
    </service-credential>
	<service-credential service-credential-id="int_canadapost.http.shipment.cred.prod">
        <url>https://soa-gw.canadapost.ca/rs/soap/authreturn/v2</url>
        <user-id>58370529177d92a1</user-id>
        <password masked="true">********</password>
    </service-credential>
    <service-credential service-credential-id="mao.availability.availabilitydetail.cred">
        <url>https://omni-uarms.omni.manh.com/inventory/api/availability/availabilitydetail</url>
        <user-id/>
        <password encrypted="true" encryption-type="common.export">SrGxqfoGle93iSKwWrTE5GY2w+i48Xh4MDM+Ota7xk4=</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="mao.oauth.token">
        <url>https://uarms-auth.omni.manh.com/oauth/token</url>
        <user-id>omnicomponent.1.0.0</user-id>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="PayPal_Sandbox_Signature_Credentials_US">
        <url>https://api-3t.sandbox.paypal.com/nvp</url>
        <user-id>sb-3k02e1226431_api1.business.example.com</user-id>
		<password>2N7MZM3PRTZB5NYL</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_Signature">AhRUUBBF-LjgoamoU8PYuNBcKKttAHhTLg.UM.ib-v8nOIXjrEK.AzAA</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>
	 <service-credential service-credential-id="PayPal_Sandbox_Signature_Credentials_CA">
        <url>https://api-3t.sandbox.paypal.com/nvp</url>
        <user-id>sb-43uuuv869041_api1.business.example.com</user-id>
        <password>8P8LESFCK3DTV8TG</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_Signature">AISMlNqM9YuxHUbMbbQlz.wgdw5aA5hvza5gTTaAmxZObyd.R-PzCYYl</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="coremedia.fragment.cred">
        <url>https://{cmsHost}/blueprint/servlet/service/fragment/{storeId}/{locale}/{params}</url>
    </service-credential>

    <service-credential service-credential-id="PayPal_Production_Signature_Credentials_US">
        <url>https://api-3t.paypal.com/nvp</url>
        <user-id></user-id>
    </service-credential>

    <service-credential service-credential-id="int_fedex.soap.address.getType.cred">
        <url>https://gateway.fedex.com:443/web-services</url>
        <user-id/>
    </service-credential>

    <service-credential service-credential-id="int_scene7.http.credential">
        <url>https://underarmour.scene7.com/is/image/Underarmour/</url>
        <user-id/>
    </service-credential>

    <service-credential service-credential-id="int_paymetric.decrypt.dev">
        <url>https://tokens-staging.underarmour.com/v1.0/authorization/decrypt</url>
        <user-id/>
    </service-credential>

    <service-credential service-credential-id="int_paymetric.exchangetoken.dev">
        <url>https://tokens-staging.underarmour.com/v1.0/tokens</url>
        <user-id/>
    </service-credential>

    <service-credential service-credential-id="SFTP-Stg">
        <url>transfer.underarmour.com</url>
        <user-id>ftpdemandwarefmsqa</user-id>
    </service-credential>

    <service-credential service-credential-id="int_accertify.http.cred">
        <url>https://icnow01.accertify.net/icNowImport/39e4a18b-deb1-47e5-b89a-35d4432781c9</url>
        <user-id>under.armour.test.user</user-id>
		<password>7Ft8$RJVX</password>
    </service-credential>

    <service-credential service-credential-id="klarna.http.uscredentials">
        <url>https://api-na.playground.klarna.com/</url>
        <user-id>PN02879_7be3697e6425</user-id>
        <password>Vivg0V8t4mzhHSHy</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

       <service-credential service-credential-id="int.openexchange.credentials">
        <url>https://openexchangerates.org/api/latest.json</url>
        <user-id/>
    </service-credential>

    <service-credential service-credential-id="int_merkle.http.subscribe.email">
        <url>https://dev-sfmc-subscribers-experience-api.us-e1.cloudhub.io/api/v1/signup</url>
        <user-id>2d1d88e868a74c12939a5bd6e2a51426</user-id>
        <password encrypted="true" encryption-type="common.export">4JGwZUk4AM2wVfx65RISz+0FM4t69fXhW91EE4Fz47smKsLOFyG8DgxGNcsOy1Y6tbxlBZEsunK6+BKwNwTWnw==</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="int_merkle.http.subscribe.status">
        <url>https://pages.emails.underarmour.com/ua_ecomm_signups</url>
        <user-id/>
		<password>5bzJDEQZ</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="int_merkle.http.subscribe.email.MX">
        <url>https://pages.em.underarmour.com/intltrigger</url>
        <user-id/>
        <password encrypted="true" encryption-type="common.export">la5e5bbEOeKwU6G+CU/KQU2zyAgZydBbV/rSo+V2oUTY1EwEt1xpb6QFcgt5jwh5</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="int_ocapi.https.couponcode.auth">
        <url>https://development-us.sfcc.ua-ecm.com/s/-/dw/data/v19_10</url>
        <user-id/>
    </service-credential>

    <service-credential service-credential-id="marketingcloud.rest">
        <url>https://mcdh79rxm36750hgr4mw7g0f9br0.rest.marketingcloudapis.com</url>
        <user-id/>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="marketingcloud.rest.auth">
        <url>https://mcdh79rxm36750hgr4mw7g0f9br0.auth.marketingcloudapis.com/v2/token</url>
        <user-id>88845a8g2abrth7uqe4vlf6u</user-id>
        <password encrypted="true" encryption-type="common.export">tUqCmWsiDMcvkoQNS8+L9HUuKBmszaYtSp61t70HpRaEfWVem+Fy7RYeOPmBuiUY/gqq5THReRLNPnp32soMHw==</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="marketingcloud.sftp">
        <url>sftp://mcb1lny9ldgv46g67cwp9cyh6kl1.ftp.marketingcloudops.com</url>
        <user-id>7282934</user-id>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="marketingcloud.mulesoft.sftp">
        <url>sftp://mcdh79rxm36750hgr4mw7g0f9br0.ftp.marketingcloudops.com/</url>
        <user-id>518000448_2</user-id>
        <password>2n8DtkjAqs4X!@#</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

	<service-credential service-credential-id="int_ois.http.graphql.credential">
        <url>https://ois-integration.ecm-external.us.ua.dev/graphql</url>
        <user-id/>
        <password encrypted="true" encryption-type="common.export">d1J0YDJH8VtlxV4M4q9o37ITTIe3Rh6+UDexjjyK9Dc=</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="int_ois.http.token.credential">
        <url>https://ua-ecomm-staging.auth0.com/oauth/token</url>
        <user-id/>
        <password encrypted="true" encryption-type="common.export">ddtaNHWq4TlLlUWVyX/vJwG3Kh7FlYQKa3EWTFC1EQo=</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="marketingcloud.soap">
        <url>https://www.exacttargetapis.com</url>
        <user-id/>
    </service-credential>

    <service-credential service-credential-id="ShoprunnerAuthV2.US">
        <url>https://apiv2-staging.shoprunner.com/token</url>
        <user-id>underarmour@shoprunner.com.srstg</user-id>
        <password>2014Winter</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="ShoprunnerSFTPFeed.US">
        <url>sftp.stg.uarm.shoprunner.net</url>
        <user-id>sruarm</user-id>
        <password>3ej2ZvZ#kJiN</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="applepay.authorize.rest">
        <url>https://checkout-test.adyen.com/v52/payments</url>
        <user-id>ws_301036@Company.UnderArmour</user-id>
        <password>zH(Iq8Y~8n3gBcBx;8b:;q*TV</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

   <service-credential service-credential-id="bazaarvoice.sftp.prd.US">
        <url>sftp.bazaarvoice.com</url>
        <user-id>underarmour</user-id>
        <password encrypted="true" encryption-type="common.export">837op2jpHThWmxX9to9HnnQH7FHVCLTLSCEcBmYHnu0=</password>
    </service-credential>

    <service-credential service-credential-id="bazaarvoice.sftp.stg.US">
        <url>sftp-stg.bazaarvoice.com</url>
        <user-id>underarmour</user-id>
        <password encrypted="true" encryption-type="common.export">BLa2WDyz1/reyCIIITF/lZOfLVLcxjeasAuCZf2EzVU=</password>
    </service-credential>
    <service-credential service-credential-id="bazaarvoice.sftp.stg.MX">
        <url>sftp-stg.bazaarvoice.com</url>
        <user-id>underarmourmx</user-id>
        <password encrypted="true" encryption-type="common.export">2j9yVhjF0LTwkioF65ahn87JRDtrGPpxIv2my73k0QbfmX8CK4kH3Faej5LELj2C</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>
	<service-credential service-credential-id="rest.borderfree.poacknowledgement.cred">
        <url>https://global.sbx.borderfree.com/omsapi/ordermanagement/v1/po/ack</url>
        <user-id>stage_UA_SFCC_api2</user-id>
        <password>lBM729lq</password>
    </service-credential>

    <service-credential service-credential-id="rest.borderfree.porequest.cred">
        <url>https://global.sbx.borderfree.com/omsapi/ordermanagement/v1/po</url>
        <user-id>stage_UA_SFCC_api2</user-id>
        <password>lBM729lq</password>
    </service-credential>

    <service-credential service-credential-id="rest.borderfree.createmissingorder.cred">
        <url>https://development-us.sfcc.ua-ecm.com/on/demandware.store/Sites-US-Site/en_US/MissingOrderCreation-Process</url>
        <user-id>stage_UA_SFCC_api2</user-id>
        <password>lBM729lq</password>
    </service-credential>

    <service-credential service-credential-id="int_vip.http.graphql.credential">
        <url>https://ecomm-vip-integration.ecm-external.us.ua.dev/graphql</url>
        <user-id/>
        <password encrypted="true" encryption-type="common.export">N01f13Tosta/hQLOhR2VM978l31ri+OVeXB1wVa8jIk=</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="int_vip.http.token.credential">
        <url>https://ua-ecomm-staging.auth0.com/oauth/token</url>
        <user-id/>
        <password encrypted="true" encryption-type="common.export">ASMH7UEPJrOfk1yMT4V5PwxxKkCz5/rbXsjwutk1Me0=</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="int_paymetric.soap.xipay.credentials">
        <url/>
        <user-id>PAYMETRIC\WSAUnderArmourQA</user-id>
        <password>password8*</password>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="int_talkoot.http.talkoot.credentials">
        <url>https://underarmourtest.talkoot.com/api/</url>
        <user-id>talkootapiuserunderarmour</user-id>
        <password>741dc50991342ae67599cf02aecbffe4ee5aa691ebd6c1bbeea2574de261cef5==</password>
    </service-credential>

    <service-credential service-credential-id="UACAPI.http.graphql.credentials">
        <url>https://api-integration.ecm-external.us.ua.dev/graphql</url>
        <user-id/>
        <password/>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="UACAPI.http.token.credentials">
        <url>https://ua-ecomm-staging.auth0.com/oauth/token</url>
        <user-id/>
        <password/>
        <custom-attributes>
            <custom-attribute attribute-id="PP_API_IsProduction">false</custom-attribute>
            <custom-attribute attribute-id="PP_API_UseCertificate">false</custom-attribute>
        </custom-attributes>
    </service-credential>

    <service-credential service-credential-id="AdyenPayment">
        <url>https://checkout-test.adyen.com/checkout/v69/payments</url>
        <user-id>ws_239602@Company.UnderArmourLATAM</user-id>
        <password encrypted="true" encryption-type="common.export">lR3y9m4GorO62BZLjpnSmLX0P3uZMXPMBdahZ3nO1U+ZKWao0PO06huhR/s+2dIscrL/AlB+yXxR4OpRd5obAg==</password>
    </service-credential>
    <service-credential service-credential-id="AdyenPaymentLive">
        <url>https://[YOUR_LIVE_PREFIX]-checkout-live.adyenpayments.com/checkout/v69/payments</url>
    </service-credential>
    <service-credential service-credential-id="AdyenPaymentDetails">
        <url>https://checkout-test.adyen.com/checkout/v69/payments/details</url>
        <user-id>ws_239602@Company.UnderArmourLATAM</user-id>
        <password encrypted="true" encryption-type="common.export">cOLQY90aOnBksQ2FcsLturX0P3uZMXPMBdahZ3nO1U/Bpo6+ghjxOcZEmMMCS3hWeHTCJnFjqdFr5E5BKzRGZA==</password>
    </service-credential>
    <service-credential service-credential-id="AdyenPaymentReversal">
        <url>https://checkout-test.adyen.com/v69/payments/{paymentPspReference}/reversals</url>
        <user-id>ws_239602@Company.UnderArmourLATAM</user-id>
    </service-credential>
    <service-credential service-credential-id="AdyenSessions">
        <url>https://checkout-test.adyen.com/checkout/v69/sessions</url>
        <user-id>ws_239602@Company.UnderArmourLATAM</user-id>
        <password encrypted="true" encryption-type="common.export">eiA2TdgGndn4lnifpk2uwbX0P3uZMXPMBdahZ3nO1U//3Fy+yhdUIMXo+xrUghZtcg3x7n7CgF3OT/otOpYMVQ==</password>
    </service-credential>
    <service-credential service-credential-id="AdyenSessionsLive">
        <url>https://[YOUR_LIVE_PREFIX]-checkout-live.adyenpayments.com/checkout/v69/sessions</url>
    </service-credential>
    <service-credential service-credential-id="AdyenPaymentDetailsLive">
        <url>https://[YOUR_LIVE_PREFIX]-checkout-live.adyenpayments.com/checkout/v69/payments/details</url>
    </service-credential>
    <service-credential service-credential-id="AdyenCheckoutPaymentMethods">
        <url>https://checkout-test.adyen.com/v68/paymentMethods</url>
        <user-id>ws_239602@Company.UnderArmourLATAM</user-id>
        <password encrypted="true" encryption-type="common.export">Byb9Iln5jssV2q/Z3vq+zrX0P3uZMXPMBdahZ3nO1U8NhXN9JD6lJhtC8wUOhCK0YOi2KW8bJSBzNhaaFsDuwQ==</password>
    </service-credential>
    <service-credential service-credential-id="AdyenCheckoutPaymentMethodsLive">
        <url>https://[YOUR_LIVE_PREFIX]-checkout-live.adyenpayments.com/checkout/v69/paymentMethods</url>
        <user-id></user-id>
        <password/>
    </service-credential>
    <service-credential service-credential-id="AdyenRecurring">
        <url>https://pal-test.adyen.com/pal/servlet/Recurring/v68/listRecurringDetails</url>
        <user-id>ws_239602@Company.UnderArmourLATAM</user-id>
        <password encrypted="true" encryption-type="common.export">OVHKJ1O5aqLBjfZvD8uJvbX0P3uZMXPMBdahZ3nO1U/YQcetRlJ2RrLyczP34GNtxftyNEW9Y32RzHZdocxTRg==</password>
    </service-credential>
    <service-credential service-credential-id="AdyenRecurringDisable">
        <url>https://pal-test.adyen.com/pal/servlet/Recurring/v68/disable</url>
        <user-id>ws_239602@Company.UnderArmourLATAM</user-id>
        <password encrypted="true" encryption-type="common.export">vqHE1WjLSWg7ut26PJ6+vbX0P3uZMXPMBdahZ3nO1U8H6gvlDHl6tcfKL7Fd2qwXg9YhvtFFJIBs5Tq7VdREhA==</password>
    </service-credential>
    <service-credential service-credential-id="AdyenRecurringDisableLive">
        <url>https://[YOUR_LIVE_PREFIX]-pal-live.adyenpayments.com/pal/servlet/Recurring/v68/disable</url>
    </service-credential>
    <service-credential service-credential-id="AdyenPosPayment">
        <url>https://terminal-api-test.adyen.com/sync</url>
    </service-credential>
    <service-credential service-credential-id="AdyenPosPaymentLive">
        <url>https://[YOUR_LIVE_PREFIX]-terminal-api-live.adyenpayments.com/sync</url>
    </service-credential>
    <service-credential service-credential-id="AdyenConnectedTerminals">
        <url>https://terminal-api-test.adyen.com/connectedTerminals</url>
    </service-credential>
    <service-credential service-credential-id="AdyenConnectedTerminalsLive">
        <url>https://[YOUR_LIVE_PREFIX]-terminal-api-live.adyenpayments.com/connectedTerminals</url>
    </service-credential>
    <service-credential service-credential-id="AdyenGiving">
        <url>https://pal-test.adyen.com/pal/servlet/Payment/v40/donate</url>
    </service-credential>
    <service-credential service-credential-id="AdyenGivingLive">
        <url>https://[YOUR_LIVE_PREFIX]-pal-live.adyenpayments.com/pal/servlet/Payment/v40/donate</url>
    </service-credential>
    <service-credential service-credential-id="AdyenPartialPaymentsOrder">
        <url>https://checkout-test.adyen.com/v69/orders</url>
        <user-id>ws_239602@Company.UnderArmourLATAM</user-id>
        <password encrypted="true" encryption-type="common.export">wXnGwEkzH4+nh8XLVYHJjrX0P3uZMXPMBdahZ3nO1U+pswuRyDV/pq7KKF+Tx9VHlAoz1CQNWsOKXaJbH5hUAg==</password>
    </service-credential>
    <service-credential service-credential-id="AdyenCancelPartialPaymentOrder">
        <url>https://checkout-test.adyen.com/v69/orders/cancel</url>
        <user-id>ws_239602@Company.UnderArmourLATAM</user-id>
        <password encrypted="true" encryption-type="common.export">jlVKAaEXwwf33kzT1v581LX0P3uZMXPMBdahZ3nO1U/hjn920VPJSSt4rtCKo+5bGm95s/j7t6UQNi9Kc340JA==</password>
    </service-credential>
    <service-credential service-credential-id="AdyenCheckBalance">
        <url>https://checkout-test.adyen.com/v69/paymentMethods/balance</url>
        <user-id>ws_239602@Company.UnderArmourLATAM</user-id>
        <password encrypted="true" encryption-type="common.export">vOh6d06J5rWLnfOo3CIrhLX0P3uZMXPMBdahZ3nO1U9+RONobXx2WSkeTA1L7lKCHxB0QvPrXQArk/xctHX4GA==</password>
    </service-credential>

    <service-profile service-profile-id="sitemaps_SFTP_profile">
        <timeout-millis>30000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>5</cb-calls>
        <cb-millis>30000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="aurusPay.https.profile">
        <timeout-millis>15000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="int_legendsoft.profile">
        <timeout-millis>15000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="int_talkoot.http.talkoot.profile">
        <timeout-millis>15000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>500</cb-millis>
    </service-profile>

    <service-profile service-profile-id="brandify.store">
        <timeout-millis>5000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>5</cb-calls>
        <cb-millis>1000</cb-millis>
    </service-profile>

	<service-profile service-profile-id="int_paymetric.soap.xipay.profile">
        <timeout-millis>15000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="AWSProfile_NA">
        <timeout-millis>30000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>5</cb-calls>
        <cb-millis>10000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="klarna.http.service">
        <timeout-millis>20000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

	<service-profile service-profile-id="int_fedex.soap.shipment.profile">
        <timeout-millis>6000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>1000</cb-millis>
        <custom-attributes>
            <custom-attribute attribute-id="data">{  &#13;
   "key":"w00vuqM7u3NSjNKP",&#13;
   "password":"1bCQxNVZLuI58YANViZUsM3mP",&#13;
   "accountNumber":"612041369",&#13;
   "meterNumber":"119071155",&#13;
   "customerTransactionId":"Return_Shipment",&#13;
   "dropoffType":"REGULAR_PICKUP",&#13;
   "serviceType":"FEDEX_GROUND",&#13;
   "packagingType":"YOUR_PACKAGING",&#13;
   "weightUnits":"LB",&#13;
   "weightValue":1,&#13;
   "paymentType":"SENDER",&#13;
   "specialServiceTypes":"RETURN_SHIPMENT",&#13;
   "returnType":"PRINT_RETURN_LABEL",&#13;
   "labelFormatType":"COMMON_2_D",&#13;
   "imageType":"PNG",&#13;
   "languageCode":"en",&#13;
   "localeCode":"US",&#13;
   "rateRequestTypes":"NONE",&#13;
   "packageCount":1,&#13;
   "sequenceNumber":1,&#13;
   "indicia":"PARCEL_RETURN",&#13;
   "hubId":"5194"&#13;
}</custom-attribute>
        </custom-attributes>
    </service-profile>

	<service-profile service-profile-id="int_canadapost.http.shipment.profile">
        <timeout-millis>5000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>1000</cb-millis>
        <custom-attributes>
            <custom-attribute attribute-id="data">{&#13;
				"serviceCode" :"DOM.EP",&#13;
				"weightValue" : 1,&#13;
				"customer_id": "0004007829"&#13;
				&#13;}</custom-attribute>
        </custom-attributes>
    </service-profile>

    <service-profile service-profile-id="marketingcloud.loyalty">
        <timeout-millis>50000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="UACAPI.http.loyalty.profile">
        <timeout-millis>50000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="SFTPProfile">
        <timeout-millis>30000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>5</cb-calls>
        <cb-millis>10000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="QASDefaultProfile">
        <timeout-millis>10000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="coremedia.fragment.prof">
        <timeout-millis>30000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="int_fedex.soap.address.getType.profile">
        <timeout-millis>5000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>1000</cb-millis>
        <custom-attributes>
            <custom-attribute attribute-id="data">{  &#13;
   "key":"pfxRPI9kgRQGPqLZ",&#13;
   "password":"AV32xnThuTzonFh7M1zDtelKh",&#13;
   "accountNumber":"488083562",&#13;
   "meterNumber":"000796745",&#13;
   "serviceId":"aval",&#13;
   "major":4,&#13;
   "intermediat":0,&#13;
   "minor":0&#13;
}</custom-attribute>
        </custom-attributes>
    </service-profile>

    <service-profile service-profile-id="int.openExchange.profile">
        <timeout-millis>5000</timeout-millis>
        <rate-limit-enabled>true</rate-limit-enabled>
        <rate-limit-calls>50</rate-limit-calls>
        <rate-limit-millis>10000</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>1000</cb-millis>
		<custom-attributes>
        <custom-attribute attribute-id="data">{  &#13;
   "app_id":"50f0e4dacb4943989601e9fdea57927e",&#13;
   "url":"https://openexchangerates.org/api/latest.json",&#13;
   "configData":{  &#13;
      "CAD":{  &#13;
         "base":"CAD",&#13;
         "currencies":"USD"&#13;
      },"GBP":{  &#13;
         "base":"GBP",&#13;
         "currencies":"USD, EUR"&#13;
      },&#13;
      "DKK":{  &#13;
         "base":"DKK",&#13;
         "currencies":"USD, EUR"&#13;
      },&#13;
      "SEK":{  &#13;
         "base":"SEK",&#13;
         "currencies":"USD, EUR"&#13;
      },&#13;
      "EUR":{  &#13;
         "base":"EUR",&#13;
         "currencies":"USD"&#13;
      },&#13;
      "SGD":{  &#13;
         "base":"SGD",&#13;
         "currencies":"USD"&#13;
      },&#13;
      "IDR":{  &#13;
         "base":"IDR",&#13;
         "currencies":"USD, SGD"&#13;
      },&#13;
      "PHP":{  &#13;
         "base":"PHP",&#13;
         "currencies":"USD, SGD"&#13;
      },&#13;
      "THB":{  &#13;
         "base":"THB",&#13;
         "currencies":"USD, SGD"&#13;
      },&#13;
      "MYR":{  &#13;
         "base":"MYR",&#13;
         "currencies":"USD, SGD"&#13;
      },&#13;
      "MXN":{  &#13;
         "base":"MXN",&#13;
         "currencies":"USD"&#13;
      },&#13;
      "CLP":{  &#13;
         "base":"CLP",&#13;
         "currencies":"USD"&#13;
      },&#13;
      "AUD":{  &#13;
         "base":"AUD",&#13;
         "currencies":"USD"&#13;
      },&#13;
      "NZD":{  &#13;
         "base":"NZD",&#13;
         "currencies":"USD"&#13;
      },&#13;
      "KRW":{  &#13;
         "base":"KRW",&#13;
         "currencies":"USD"&#13;
      },&#13;
      "TRY":{  &#13;
         "base":"TRY",&#13;
         "currencies":"USD"&#13;
      },&#13;
      "BRL":{  &#13;
         "base":"BRL",&#13;
         "currencies":"USD"&#13;
      }&#13;
   }&#13;
}</custom-attribute>
        </custom-attributes>
    </service-profile>

    <service-profile service-profile-id="int_accertify.http.profile">
        <timeout-millis>10000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>1000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="int_paymetric.http.profile">
        <timeout-millis>50000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>5</rate-limit-calls>
        <rate-limit-millis>10000</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>1000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="PayPal_Default_Profile">
        <timeout-millis>60000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="int_scene7.http.profile">
        <timeout-millis>5000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>1000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="Vertex">
        <timeout-millis>10000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="applepay.authorize.profile">
        <timeout-millis>10000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="bazaarvoice.http">
        <timeout-millis>700</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>2000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="bazaarvoice.http.bot">
        <timeout-millis>3000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>10000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="bazaarvoice.sftp">
        <timeout-millis>5000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>20000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="int_merkle.profile">
        <timeout-millis>15000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="int_ocapi.https.couponcode.auth">
        <timeout-millis>15000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="marketingcloud.rest">
        <timeout-millis>0</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="marketingcloud.sftp">
        <timeout-millis>0</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="marketingcloud.mulesoft.sftp">
        <timeout-millis>20000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>30</cb-calls>
        <cb-millis>30000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="marketingcloud.soap">
        <timeout-millis>0</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="int_idme.http.profile">
        <timeout-millis>10000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>1000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="mao.availability.availabilitydetail.profile">
        <timeout-millis>5000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>4</cb-calls>
        <cb-millis>1000</cb-millis>
    </service-profile>

	<service-profile service-profile-id="mao.oauth.token">
        <timeout-millis>4000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>4</cb-calls>
        <cb-millis>1000</cb-millis>
    </service-profile>

	<service-profile service-profile-id="int_ois.http.profile">
        <timeout-millis>3000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>3000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="mao.save.order">
        <timeout-millis>5000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>4</cb-calls>
        <cb-millis>1000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="sqsQueue.save.order">
        <timeout-millis>4000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>4</cb-calls>
        <cb-millis>1000</cb-millis>
    </service-profile>

	<service-profile service-profile-id="firstData.auth0.token">
        <timeout-millis>5000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="firstData.graphQL">
        <timeout-millis>5000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="Shoprunner">
        <timeout-millis>6000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="Borderfree PO Acknowledgement">
        <timeout-millis>30000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="Borderfree PO Request">
        <timeout-millis>30000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="Borderfree CreateMissingOrder Request">
        <timeout-millis>5000</timeout-millis>
        <rate-limit-enabled>true</rate-limit-enabled>
        <rate-limit-calls>100</rate-limit-calls>
        <rate-limit-millis>5000</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>10</cb-calls>
        <cb-millis>5000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="int_vip.http.profile">
        <timeout-millis>3000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>3000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="int_perimeterx">
        <timeout-millis>500</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

	 <service-profile service-profile-id="idm.http.profile">
        <timeout-millis>50000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

	<service-profile service-profile-id="Adobeassetapi.http.profile">
        <timeout-millis>30000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>false</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="UACAPI.http.graphql.profile">
        <timeout-millis>20000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>60000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="UACAPI.http.s3.getPDF.profile">
        <timeout-millis>3000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>3</cb-calls>
        <cb-millis>10000</cb-millis>
    </service-profile>

    <service-profile service-profile-id="UACAPI.http.token.profile">
        <timeout-millis>3000</timeout-millis>
        <rate-limit-enabled>false</rate-limit-enabled>
        <rate-limit-calls>0</rate-limit-calls>
        <rate-limit-millis>0</rate-limit-millis>
        <cb-enabled>true</cb-enabled>
        <cb-calls>0</cb-calls>
        <cb-millis>0</cb-millis>
    </service-profile>

    <service-profile service-profile-id="Adyen">
        <timeout-millis>30000</timeout-millis>
        <cb-enabled>false</cb-enabled>
    </service-profile>
    <service-profile service-profile-id="AdyenPOS">
        <timeout-millis>100000</timeout-millis>
        <cb-enabled>false</cb-enabled>
    </service-profile>

    <service service-id="aurusPay.https.getBillerToken">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>aurusPay-getBillerToken</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>aurusPay.https.profile</profile-id>
        <credential-id>AuruspaySandboxBillerToken</credential-id>
    </service>

    <service service-id="aurusPay.https.getSession">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>aurusPay-getSession</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>aurusPay.https.profile</profile-id>
        <credential-id>AuruspaySandboxSession</credential-id>
    </service>

    <service service-id="aurusPay.https.getSessionToken">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>aurusPay-getSessionToken</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>aurusPay.https.profile</profile-id>
        <credential-id>AurusPaySandboxSessionTokken</credential-id>
    </service>

    <service service-id="aurusPay.https.preAuth">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>aurusPay-preAuth</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>aurusPay.https.profile</profile-id>
        <credential-id>AuruspaySandboxAuth</credential-id>
    </service>

    <service service-id="int_legendsoft">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>int_legendsoft</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_legendsoft.profile</profile-id>
        <credential-id>int_legendsoft.credentials</credential-id>
    </service>

    <service service-id="int_talkoot.http.talkoot">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix/>
        <comm-log-enabled>false</comm-log-enabled>
        <force-prd-enabled>true</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_talkoot.http.talkoot.profile</profile-id>
        <credential-id>int_talkoot.http.talkoot.credentials</credential-id>
    </service>

    <service service-id="brandify.store">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>Brandify</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>brandify.store</profile-id>
        <credential-id>brandify.store</credential-id>
    </service>

     <service service-id="idm.http">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>IDM</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>idm.http.profile</profile-id>
        <credential-id>idm.http.credentials</credential-id>
    </service>

	<service service-id="int_paymetric.soap.xipay">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>PaymetricXiPay</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_paymetric.soap.xipay.profile</profile-id>
        <credential-id>int_paymetric.soap.xipay.credentials</credential-id>
    </service>


    <service service-id="AWS-XML_NA">
        <service-type>SFTP</service-type>
        <enabled>true</enabled>
        <log-prefix>AWS-XML_NA</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>AWSProfile_NA</profile-id>
        <credential-id>AWS-Stg_NA</credential-id>
    </service>

	 <service service-id="int_fedex.soap.shipment.shipRequest">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>FEDEX</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_fedex.soap.shipment.profile</profile-id>
        <credential-id>int_fedex.soap.shipment.label</credential-id>
    </service>

	<service service-id="int_canadapost.soap.shipment.createAuthorizedReturn">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>CanadaPostCreateAuthorize</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_canadapost.http.shipment.profile</profile-id>
        <credential-id>int_canadapost.http.shipment.cred</credential-id>
    </service>

    <service service-id="int_canadapost.soap.shipment.getArtifact">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>CanadaPostgetArtifact</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_canadapost.http.shipment.profile</profile-id>
        <credential-id>int_canadapost.http.shipment.cred</credential-id>
    </service>

    <service service-id="shoprunner.https.authentication.get.v2.US">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>shoprunner_api</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Shoprunner</profile-id>
        <credential-id>ShoprunnerAuthV2.US</credential-id>
    </service>

    <service service-id="shoprunner.sftp.feed.submit.US">
        <service-type>SFTP</service-type>
        <enabled>true</enabled>
        <log-prefix>shoprunner_api</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Shoprunner</profile-id>
        <credential-id>ShoprunnerSFTPFeed.US</credential-id>
    </service>

    <service service-id="int_qas.address.get">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>QAS</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>QASDefaultProfile</profile-id>
        <credential-id/>
    </service>

    <service service-id="int_qas.address.refine">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>QAS</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>QASDefaultProfile</profile-id>
        <credential-id/>
    </service>

    <service service-id="int_qas.address.search">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>QAS</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>QASDefaultProfile</profile-id>
        <credential-id/>
    </service>

    <service service-id="int_qas.address.typedown.search">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>QAS</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>QASDefaultProfile</profile-id>
        <credential-id/>
    </service>

    <service service-id="klarna.http.defaultendpoint">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>klarna</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>klarna.http.service</profile-id>
        <credential-id>klarna.http.uscredentials</credential-id>
    </service>

    <service service-id="int_fedex.soap.address.getType">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>F_ADDRESS</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_fedex.soap.address.getType.profile</profile-id>
        <credential-id>int_fedex.soap.address.getType.cred</credential-id>
    </service>

    <service service-id="coremedia.fragment.get">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>coremedia</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>coremedia.fragment.prof</profile-id>
        <credential-id>coremedia.fragment.cred</credential-id>
    </service>

    <service service-id="coremedia.url.get">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>coremedia</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>coremedia.fragment.prof</profile-id>
        <credential-id>coremedia.fragment.cred</credential-id>
    </service>

    <service service-id="SFTP-XML">
        <service-type>SFTP</service-type>
        <enabled>true</enabled>
        <log-prefix>SFTP-XML</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>SFTPProfile</profile-id>
        <credential-id>SFTP-Stg</credential-id>
    </service>

    <service service-id="applepay.authorize">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>ApplePay</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>applepay.authorize.profile</profile-id>
        <credential-id>applepay.authorize.rest</credential-id>
    </service>

    <service service-id="int_paymetric.http.decrypt">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>paymetric</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_paymetric.http.profile</profile-id>
        <credential-id>int_paymetric.decrypt.dev</credential-id>
    </service>

    <service service-id="int_scene7.http">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>Scene7</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_scene7.http.profile</profile-id>
        <credential-id>int_scene7.http.credential</credential-id>
    </service>

    <service service-id="int.openexchange.http">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>OpenExchange</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int.openExchange.profile</profile-id>
        <credential-id>int.openexchange.credentials</credential-id>
    </service>

    <service service-id="int_accertify.http.fraud">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>Accertify</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_accertify.http.profile</profile-id>
        <credential-id>int_accertify.http.cred</credential-id>
    </service>

    <service service-id="int_paymetric.http.exchangetoken">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>paymetric</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_paymetric.http.profile</profile-id>
        <credential-id>int_paymetric.exchangetoken.dev</credential-id>
    </service>

    <service service-id="int_paypal.http.nvp.payment.PayPal.US">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>PayPalHttpNvp</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>PayPal_Default_Profile</profile-id>
        <credential-id>PayPal_Sandbox_Signature_Credentials_US</credential-id>
    </service>

	 <service service-id="int_paypal.http.nvp.payment.PayPal.CA">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>PayPalHttpNvp</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>PayPal_Default_Profile</profile-id>
        <credential-id>PayPal_Sandbox_Signature_Credentials_CA</credential-id>
    </service>

    <service service-id="vertex.CalculateTax">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>VertexSOAP</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Vertex</profile-id>
        <credential-id/>
    </service>

    <service service-id="vertex.LookupTaxAreas">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>VertexSOAP</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Vertex</profile-id>
        <credential-id/>
    </service>

    <service service-id="int_merkle.http.subscribe.email">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>int_merkle</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_merkle.profile</profile-id>
        <credential-id>int_merkle.http.subscribe.email</credential-id>
    </service>

    <service service-id="int_merkle.http.subscribe.email.MX">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>int_merkle</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_merkle.profile</profile-id>
        <credential-id>int_merkle.http.subscribe.email.MX</credential-id>
    </service>

    <service service-id="int_merkle.http.subscribe.status">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>int_merkle_status</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_merkle.profile</profile-id>
        <credential-id>int_merkle.http.subscribe.status</credential-id>
    </service>

    <service service-id="int_ocapi.https.couponcode.auth">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>int_ocapi_couponcode_auth</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_ocapi.https.couponcode.auth</profile-id>
        <credential-id>int_ocapi.https.couponcode.auth</credential-id>
    </service>

    <service service-id="marketingcloud.rest.auth">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>marketingcloud_rest</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>marketingcloud.rest</profile-id>
        <credential-id>marketingcloud.rest.auth</credential-id>
    </service>

    <service service-id="marketingcloud.rest.messaging.send">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>marketingcloud_rest</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>marketingcloud.rest</profile-id>
        <credential-id>marketingcloud.rest</credential-id>
    </service>

    <service service-id="marketingcloud.rest.dataextension.send">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>marketingcloud_rest</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>marketingcloud.rest</profile-id>
        <credential-id>marketingcloud.rest</credential-id>
    </service>

    <service service-id="marketingcloud.sftp">
        <service-type>SFTP</service-type>
        <enabled>true</enabled>
        <log-prefix/>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>marketingcloud.sftp</profile-id>
        <credential-id>marketingcloud.sftp</credential-id>
    </service>

    <service service-id="marketingcloud.soap.create">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>marketingcloud_soap</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>marketingcloud.soap</profile-id>
        <credential-id>marketingcloud.soap</credential-id>
    </service>

    <service service-id="marketingcloud.soap.retrieve">
        <service-type>SOAP</service-type>
        <enabled>true</enabled>
        <log-prefix>marketingcloud_soap</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>marketingcloud.soap</profile-id>
        <credential-id>marketingcloud.soap</credential-id>
    </service>

        <service service-id="int_idme.http.tokendata">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>idme</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_idme.http.profile</profile-id>
        <credential-id/>
    </service>

    <service service-id="int_idme.http.validationstatus">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>idme</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_idme.http.profile</profile-id>
        <credential-id/>
    </service>

    <service service-id="mao.availability.availabilitydetail">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>mao_availability</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>mao.availability.availabilitydetail.profile</profile-id>
        <credential-id>mao.availability.availabilitydetail.cred</credential-id>
    </service>

    <service service-id="mao.oauth.token">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>mao</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>mao.oauth.token</profile-id>
        <credential-id>mao.oauth.token</credential-id>
    </service>

	<service service-id="int_ois.http.graphql">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>OIS_GrapghQL</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>true</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_ois.http.profile</profile-id>
        <credential-id>int_ois.http.graphql.credential</credential-id>
    </service>

    <service service-id="int_ois.http.tokendata">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>OIS_Token</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>true</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_ois.http.profile</profile-id>
        <credential-id>int_ois.http.token.credential</credential-id>
    </service>

    <service service-id="mao.save.order">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>mao</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>mao.save.order</profile-id>
        <credential-id/>
    </service>

    <service service-id="sqsQueue.save.order">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>sqsQueue</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>true</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>sqsQueue.save.order</profile-id>
        <credential-id/>
    </service>

    <service service-id="firstData.auth0.token">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>firstData</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>firstData.auth0.token</profile-id>
        <credential-id/>
    </service>

    <service service-id="firstData.graphQL">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>firstData</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>firstData.graphQL</profile-id>
        <credential-id/>
    </service>

	<service service-id="borderfree.https.poacknowledgement.post">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>bfxPOAcknowledgement</log-prefix>
        <comm-log-enabled>false</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Borderfree PO Acknowledgement</profile-id>
        <credential-id>rest.borderfree.poacknowledgement.cred</credential-id>
    </service>

    <service service-id="borderfree.https.porequest.get">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>bfxPORequest</log-prefix>
        <comm-log-enabled>false</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Borderfree PO Request</profile-id>
        <credential-id>rest.borderfree.porequest.cred</credential-id>
    </service>

    <service service-id="borderfree.https.createmissingorder">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>bf_createmissingorder</log-prefix>
        <comm-log-enabled>false</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Borderfree CreateMissingOrder Request</profile-id>
        <credential-id>rest.borderfree.createmissingorder.cred</credential-id>
    </service>

    <service service-id="int_vip.http.graphql">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>VIP_GrapghQL</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_vip.http.profile</profile-id>
        <credential-id>int_vip.http.graphql.credential</credential-id>
    </service>

    <service service-id="int_vip.http.tokendata">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>VIP_Token</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_vip.http.profile</profile-id>
        <credential-id>int_vip.http.token.credential</credential-id>
    </service>


    <service service-id="int_perimeterx.https.collector">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>int_perimeterx_riskapi</log-prefix>
        <comm-log-enabled>false</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_perimeterx</profile-id>
    </service>

    <service service-id="int_perimeterx.https.client">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>int_perimeterx_client</log-prefix>
        <comm-log-enabled>false</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_perimeterx</profile-id>
        <credential-id>int_perimeterx.https.client.uri</credential-id>
    </service>

     <service service-id="int_perimeterx.https.captchaScript">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>int_perimeterx_client</log-prefix>
        <comm-log-enabled>false</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>int_perimeterx</profile-id>
        <credential-id>int_perimeterx.https.captchaScript.uri</credential-id>
    </service>

    <service service-id="bazaarvoice.http">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>bazaarvoice_http</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>bazaarvoice.http</profile-id>
        <credential-id/>
    </service>

    <service service-id="bazaarvoice.http.bot">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>bazaarvoice_http</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>bazaarvoice.http.bot</profile-id>
        <credential-id/>
    </service>

    <service service-id="bazaarvoice.sftp.export.US">
        <service-type>SFTP</service-type>
        <enabled>true</enabled>
        <log-prefix>bazaarvoice_sftp</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>bazaarvoice.sftp</profile-id>
        <credential-id>bazaarvoice.sftp.stg.US</credential-id>
    </service>

    <service service-id="bazaarvoice.sftp.import.US">
        <service-type>SFTP</service-type>
        <enabled>true</enabled>
        <log-prefix>bazaarvoice_sftp</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>bazaarvoice.sftp</profile-id>
        <credential-id>bazaarvoice.sftp.stg.US</credential-id>
    </service>
    <service service-id="bazaarvoice.sftp.export.MX">
        <service-type>SFTP</service-type>
        <enabled>true</enabled>
        <log-prefix>bazaarvoice_sftp</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>bazaarvoice.sftp</profile-id>
        <credential-id>bazaarvoice.sftp.stg.MX</credential-id>
    </service>
    <service service-id="bazaarvoice.sftp.import.MX">
        <service-type>SFTP</service-type>
        <enabled>true</enabled>
        <log-prefix>bazaarvoice_sftp</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>bazaarvoice.sftp</profile-id>
        <credential-id>bazaarvoice.sftp.stg.MX</credential-id>
    </service>

    <service service-id="marketingcloud.mulesoft.sftp">
        <service-type>SFTP</service-type>
        <enabled>true</enabled>
        <log-prefix>marketing_mule</log-prefix>
        <comm-log-enabled>false</comm-log-enabled>
        <force-prd-enabled>true</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>marketingcloud.mulesoft.sftp</profile-id>
        <credential-id>marketingcloud.mulesoft.sftp</credential-id>
    </service>

	<service service-id="Adobeassetapi.http.outfit">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adobeassetapi</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adobeassetapi.http.profile</profile-id>
        <credential-id>Adobeassetapi.http.outfit</credential-id>
    </service>

    <service service-id="UACAPI.http.loyalty">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>loyalty</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>UACAPI.http.loyalty.profile</profile-id>
        <credential-id>UACAPI.http.loyalty.credentials</credential-id>
    </service>

    <service service-id="UACAPI.http.graphql">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>UACAPI-graphql</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>UACAPI.http.graphql.profile</profile-id>
        <credential-id>UACAPI.http.graphql.credentials</credential-id>
    </service>

    <service service-id="UACAPI.http.s3.getPDF">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>UACAPI-getPDF</log-prefix>
        <comm-log-enabled>false</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>UACAPI.http.s3.getPDF.profile</profile-id>
        <credential-id/>
    </service>

    <service service-id="UACAPI.http.tokendata">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>UACAPI-token</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>UACAPI.http.token.profile</profile-id>
        <credential-id>UACAPI.http.token.credentials</credential-id>
    </service>

    <service service-id="marketingcloud.loyalty">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>loyalty</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>marketingcloud.loyalty</profile-id>
        <credential-id>marketingcloud.loyalty</credential-id>
    </service>

    <service service-id="marketingcloud.loyalty.auth">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>loyalty</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>false</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>marketingcloud.loyalty</profile-id>
        <credential-id>marketingcloud.loyalty.auth</credential-id>
    </service>

    <service service-id="sitemaps_SFTP_service">
        <service-type>SFTP</service-type>
        <enabled>true</enabled>
        <log-prefix>Sitemaps_SFTP</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <force-prd-enabled>true</force-prd-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>sitemaps_SFTP_profile</profile-id>
        <credential-id>sitemaps_SFTP_credentials</credential-id>
    </service>

    <service service-id="AdyenPayment">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adyen</profile-id>
        <credential-id>AdyenPayment</credential-id>
    </service>
    <service service-id="AdyenPaymentDetails">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adyen</profile-id>
        <credential-id>AdyenPaymentDetails</credential-id>
    </service>
    <service service-id="AdyenRecurring">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adyen</profile-id>
        <credential-id>AdyenRecurring</credential-id>
    </service>
    <service service-id="AdyenCheckoutPaymentMethods">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adyen</profile-id>
        <credential-id>AdyenCheckoutPaymentMethods</credential-id>
    </service>
    <service service-id="AdyenSessions">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adyen</profile-id>
        <credential-id>AdyenSessions</credential-id>
    </service>
    <service service-id="AdyenRecurringDisable">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id></profile-id>
        <credential-id>AdyenRecurringDisable</credential-id>
    </service>
    <service service-id="AdyenPosPayment">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>AdyenPOS</profile-id>
        <credential-id>AdyenPosPayment</credential-id>
    </service>
    <service service-id="AdyenConnectedTerminals">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adyen</profile-id>
        <credential-id>AdyenConnectedTerminals</credential-id>
    </service>
    <service service-id="AdyenGiving">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adyen</profile-id>
        <credential-id>AdyenGiving</credential-id>
    </service>
    <service service-id="AdyenPartialPaymentsOrder">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adyen</profile-id>
        <credential-id>AdyenPartialPaymentsOrder</credential-id>
    </service>
    <service service-id="AdyenCancelPartialPaymentOrder">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adyen</profile-id>
        <credential-id>AdyenCancelPartialPaymentOrder</credential-id>
    </service>
    <service service-id="AdyenPaymentReversal">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adyen</profile-id>
        <credential-id>AdyenPaymentReversal</credential-id>
    </service>
    <service service-id="AdyenCheckBalance">
        <service-type>HTTP</service-type>
        <enabled>true</enabled>
        <log-prefix>adyen</log-prefix>
        <comm-log-enabled>true</comm-log-enabled>
        <mock-mode-enabled>false</mock-mode-enabled>
        <profile-id>Adyen</profile-id>
        <credential-id>AdyenCheckBalance</credential-id>
    </service>

</services>
